load sections .text, .rodata,.data,.bss from file

starting from 0x400590 with
  rsp := 0x7fffffffd9f8             # stack pointer
  rdi := 0x000000000002             # argc
  rsi := 0x7fffffffdae8             # argv
  @[rsi + 8, 8] := 0x7fffffffdede   # argv[1]
  key_size<64> := nondet            # 0 < strlen(argv[1]) < 128
  assume 0 < key_size < 128
  all_printables<1> := true
  @[@[rsi + 8, 8], 128] := 0
  for i<64> in 1 to key_size do
    @[@[rsi + 8, 8] + i - 1] := nondet as key_product
    assume key_product <> 0             # can not contains null characters
    all_printables := all_printables && " " <= key_product <= "~"
  end
end

# .plt

@[0x0000000000604208, 8] := 0x7ffff7f45f30 as strncpy
@[0x0000000000604210, 8] := 0x7ffff7e405a0 as puts
@[0x0000000000604218, 8] := 0x7ffff7ed8040 as errx
@[0x0000000000604220, 8] := 0x7ffff7e1de10 as printf
@[0x0000000000604228, 8] := 0x7ffff7ddffc0 as __libc_start_main
@[0x0000000000604230, 8] := 0x000000000000 as __gmon_start__
@[0x0000000000604238, 8] := 0x7ffff7e02bc0 as exit
@[0x0000000000604240, 8] := 0x7ffff7df0400 as __ctype_b_loc

# function stubs

abort at errx, __libc_start_main, __gmon_start__, __ctype_b_loc

replace puts, printf by
  caller<64> := @[rsp, 8]
  rsp := rsp + 8
  jump at caller

# goal

reach puts such that @[rdi, 30] = "Thank you - product activated!"
      	          && all_printables
then print ascii stream key_product

cut at puts if
  @[rdi, 55] = "./unbreakable_enterprise_product_activation product-key"

cut at printf if @[rdi, 29] = "Product activation failure %d"

starting from core

return_address<64> := @[rsp, 8]

replace <puts>, <printf> by
  caller<64> := @[rsp, 8]
  rsp := rsp + 8
  jump at caller

replace <__isoc99_scanf> by
  caller<64> := @[rsp, 8]
  assert @[rdi, 3] = "%s"z
  len<64> := nondet
  assume 0 < len < 50
  all_printables<1> := true
  for i<64> in 0 to len - 1 do
    @[rsi + i] := nondet as key
    all_printables := all_printables && " " <= key <= "~"
  end
  @[rsi + i] := "\x00"
  assume all_printables
  rsp := rsp + 8
  jump at caller

reach <printf> such that @[rdi, 16] = "[+] Correct key!"
then print ascii stream key

cut at <printf> if @[rdi, 18] = "[-] Incorrect key!"

halt at <__stack_chk_fail>
halt at return_address

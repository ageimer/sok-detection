[disasm]
decode-replacement = \
    <free>   -> 0: esp<32> := esp<32> + 4<32>; goto 1 \
                1: goto @[esp<32> - 4<32>,4] // ret \
    <malloc> -> 0: eax<32> := malloc_base<32> + 4<32>; goto 1 \
                1: @[malloc_base<32>, 4] := @[esp<32> + 4<32>, 4]; goto 2 \
                2: malloc_base<32> := malloc_base<32> + @[esp<32> + 4<32>, 4] + 4<32>; goto 3 \
                3: esp<32> := esp<32> + 4<32>; goto 4 \
                4: goto @[esp<32> - 4<32>,4] // ret \
    <calloc> -> 0: eax<32> := malloc_base<32> + 4<32>; goto 1 \
                1: alloc_size<32> := @[esp<32> + 4<32>, 4] * @[esp<32> + 8<32>, 4]; goto 2 \
                2: @[malloc_base<32>, 4] := alloc_size<32>; goto 3 \
                3: malloc_size<32> := malloc_size<32> + 4<32>; goto 4 \
                4: if (alloc_size<32> = 0<32>) goto 8 else goto 5 \
                5: @[malloc_base<32>, 1] := 0<8>; goto 6 \
                6: malloc_base<32> := malloc_base<32> + 1<32>; goto 7 \
                7: alloc_size<32> := alloc_size<32> - 1<32>; goto 4 \
                8: esp<32> := esp<32> + 4<32>; goto 9 \
                9: goto @[esp<32> - 4<32>,4] // ret \
   <realloc> -> 0: eax<32> := malloc_base<32> + 4<32>; goto 1 \
                1: @[malloc_base<32>, 4] := @[esp<32> + 8<32>, 4]; goto 2 \
                2: malloc_base<32> := malloc_base<32> + @[esp<32> + 8<32>, 4] + 4<32>; goto 3 \
                3: old_ptr<32> := @[esp<32> + 4<32>, 4]; goto 4 \
                4: old_size<32> := @[old_ptr<32> - 4<32>, 4]; goto 5 \
                5: if (old_size<32> = 0<32>) goto 8 else goto 6 \
                6: old_size<32> := old_size<32> - 1<32>; goto 7 \
                7: @[eax<32> + old_size<32>, 1] := @[old_ptr<32> + old_size<32>, 1]; goto 5 \
                8: esp<32> := esp<32> + 4<32>; goto 9 \
                9: goto @[esp<32> - 4<32>,4] // ret
